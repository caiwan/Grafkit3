project(Player)

include(ProjectWarnings)

include (PyEnv)
create_python_venv("venv" PYTHON_VENV_EXECUTABLE)

find_package(Vulkan REQUIRED)

file(GLOB_RECURSE GLSL_SOURCE_FILES
	${CMAKE_CURRENT_SOURCE_DIR}/*.vert
	${CMAKE_CURRENT_SOURCE_DIR}/*.frag
	${CMAKE_CURRENT_SOURCE_DIR}/*.comp
)

set(SHADER_INCLUDE_DIR ${CMAKE_CURRENT_BINARY_DIR}/include/)
set(SPIRV_EMBED_SOURCE_FILES "")

spirv_compile_shaders(
	SOURCES ${GLSL_SOURCE_FILES}
	SHADER_BINARY_DIR ${CMAKE_CURRENT_BINARY_DIR}/shaders
	SHADER_INCLUDE_DIR ${SHADER_INCLUDE_DIR}/shaders
	GENERATED_FILES_ARG SPIRV_EMBED_SOURCE_FILES
)

add_library(${PROJECT_NAME}-Shaders STATIC ${GLSL_SOURCE_FILES} ${SPIRV_EMBED_SOURCE_FILES})
target_include_directories(${PROJECT_NAME}-Shaders PUBLIC ${SHADER_INCLUDE_DIR})
set_target_properties(${PROJECT_NAME}-Shaders PROPERTIES LINKER_LANGUAGE C)


file(GLOB_RECURSE SOURCE_FILES
	${CMAKE_CURRENT_SOURCE_DIR}/*.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/*.c
)

file(GLOB_RECURSE HEADER_FILES
	${CMAKE_CURRENT_SOURCE_DIR}/*.h
	${CMAKE_CURRENT_SOURCE_DIR}/*.hpp
	${CMAKE_CURRENT_SOURCE_DIR}/*.hxx
)


add_executable(${PROJECT_NAME} ${SOURCE_FILES} ${HEADER_FILES})

set_project_warnings(${PROJECT_NAME})

set(GENERATED_INCLUDE_DIR ${CMAKE_CURRENT_BINARY_DIR}/include/)

set(SHADER_BINARY_DIR ${CMAKE_CURRENT_BINARY_DIR}/shaders)
set(SHADER_INCLUDE_DIR ${GENERATED_INCLUDE_DIR}/shaders)

set(CMAKE_INCLUDE_CURRENT_DIR on)

target_link_libraries(${PROJECT_NAME})

target_include_directories(${PROJECT_NAME} PRIVATE ${GENERATED_INCLUDE_DIR})
target_link_libraries(
	${PROJECT_NAME}
	${PROJECT_NAME}-Shaders
	Grafkit::Grafkit
	Grafkit::GrafkitLoader
)

# Install?
include(GNUInstallDirs)
install(TARGETS ${PROJECT_NAME} DESTINATION ${CMAKE_INSTALL_BINDIR})
